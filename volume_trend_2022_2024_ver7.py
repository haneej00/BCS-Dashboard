# -*- coding: utf-8 -*-
"""Volume_Trend_2022_2024_ver7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hsWQRzgNmJaEXKfHtKa_T7NF9xHRBHms
"""

## Quarterly data table
## Volume per Transaction accuracy

## Add MCC Contribution % next to description
## Revise with ACTUAL DATA (SUM)

## Ver.7

import streamlit as st
import pandas as pd
import plotly.graph_objs as go

file_path = '22-24 Jan-dec live accts Yearly avg_streamlit.xlsx'

mcc_labels = {
    7230: "Beauty Services", 5812: "Restaurants", 7216: "Dry Cleaning", 5499: "Specialty Foods",
    5999: "Misc. Retail", 7297: "Massage", 5691: "Clothing Stores", 8021: "Dentists", 8099: "Medical Services",
    5621: "Women's Apparel", 5814: "Fast Food", 8299: "Educational Services", 7538: "Auto Repair",
    5921: "Alcohol Stores", 4812: "Telecom Services", 5944: "Jewelry Stores", 5462: "Bakeries",
    5137: "Men’s Clothing", 5310: "Discount Stores", 5631: "Women's Accessories"
}

mcc_options = {"All MCCs": "all"}
mcc_options.update({v: k for k, v in mcc_labels.items()})

@st.cache_data
def load_data():
    df = pd.read_excel(file_path, engine='openpyxl')
    return df

df = load_data()

vol_cols = [f'vol {year}{month:02d}' for year in range(2022, 2025) for month in range(1, 13)][:36]
trans_cols = [f'trans {year}{month:02d}' for year in range(2022, 2025) for month in range(1, 13)][:36]

st.title("BCS Account Volume by MCC type")
selected_label = st.selectbox("Choose Business type", list(mcc_options.keys()))
selected_mcc = mcc_options[selected_label]

# ✅ 분기 계산을 위해 분기 번호 추출
data['Quarter'] = data['Month'].dt.to_period('Q')

# 📈 분기별 합계 계산
quarterly = data.groupby('Quarter').agg({
    'Volume': 'sum',
    'Transaction': 'sum'
}).reset_index()

quarterly['Volume per Tx'] = quarterly['Volume'] / quarterly['Transaction']

# ✅ Plotly line chart: 분기별 sum 변화
st.subheader("📈 Quarterly Total Volume & Transaction")

fig = go.Figure()
fig.add_trace(go.Scatter(x=quarterly['Quarter'].astype(str), y=quarterly['Volume'], mode='lines+markers', name='Quarterly Volume', line=dict(color='green')))
fig.add_trace(go.Scatter(x=quarterly['Quarter'].astype(str), y=quarterly['Transaction'], mode='lines+markers', name='Quarterly Transaction', line=dict(color='blue')))
fig.update_layout(
    title=title + " - Quarterly Volume & Transaction (Sum)",
    xaxis_title='Quarter',
    yaxis_title='Total',
    height=500
)
st.plotly_chart(fig, use_container_width=True)

# 📋 분기별 테이블 출력
st.subheader("📋 Quarterly Sum Table")

quarterly['Volume'] = quarterly['Volume'].apply(lambda x: f"${x:,.0f}")
quarterly['Transaction'] = quarterly['Transaction'].apply(lambda x: f"{x:,.0f}")
quarterly['Volume per Tx'] = quarterly['Volume per Tx'].apply(lambda x: f"{x:,.1f}")

st.table(quarterly.rename(columns={
    'Quarter': 'Period',
    'Volume': 'Total Volume',
    'Transaction': 'Total Transaction',
    'Volume per Tx': 'Volume / Tx'
}))